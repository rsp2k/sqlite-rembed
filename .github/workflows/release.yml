name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    name: Build and Upload
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            artifact_name: libsqlite_rembed.so
            asset_name: sqlite-rembed-linux-x86_64.so

          - os: macos-13
            target: x86_64-apple-darwin
            artifact_name: libsqlite_rembed.dylib
            asset_name: sqlite-rembed-macos-x86_64.dylib

          - os: macos-14
            target: aarch64-apple-darwin
            artifact_name: libsqlite_rembed.dylib
            asset_name: sqlite-rembed-macos-aarch64.dylib

          - os: windows-2022
            target: x86_64-pc-windows-msvc
            artifact_name: sqlite_rembed.dll
            asset_name: sqlite-rembed-windows-x86_64.dll

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  build-python:
    name: Build Python Wheels
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          pip install build twine

      - name: Build wheels
        run: |
          cd bindings/python
          python -m build

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: python-wheels
          path: bindings/python/dist/